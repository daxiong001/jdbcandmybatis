<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.dai.mapper.BrandMapper">

    <resultMap id="brandResultMap" type="Brand">
        <result column="brand_name" jdbcType="VARCHAR" property="brandName"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
    </resultMap>


    <select id="selectAllBrand" resultMap="brandResultMap">
        select * from tv_brand;
    </select>

<!--     <![CDATA[
         转译，特殊sql报错
         ]]>
-->
    <select id="selectById" parameterType="int" resultMap="brandResultMap">
        select * from tv_brand where id = #{id}
    </select>


<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select * from tv_brand-->
<!--        where-->
<!--            status = #{status}-->
<!--            and company_name like #{companyName}-->
<!--            and brand_name like #{brandName}-->

<!--    </select>-->

<!--    动态条件查询-->

    <select id="selectByCondition" resultMap="brandResultMap">
        select  * from tv_brand
            where
                <if test="status!=null">
                    status= #{status}
                </if>
                <if test="companyName != null and companyName != ''">
                    and company_name like #{companyName}
                </if>
                <if test="brandName != null and companyName != ''">
                    and brand_name like #{brandName}
                </if>
    </select>
    
    
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select * from tv_brand
            <where>
                <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like #{companyName}
                </when>
                <when test="brandName != null and brandName != ''">
                    brand_name like #{brandName}
                </when>
                </choose>
            </where>
    </select>


    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tv_brand (brand_name, company_name, ordered, description, status)
         VALUES (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status});
    </insert>


    <update id="update">
        update tv_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
        delete from tv_brand where id = #{id};
    </delete>


    <delete id="deleteByIds">
        delete from tv_brand where id
        in
            <foreach collection="array" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>

    </delete>

</mapper>